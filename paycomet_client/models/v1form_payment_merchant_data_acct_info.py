# coding: utf-8

"""
    PAYCOMET REST API

    PAYCOMET API REST for customers.  # noqa: E501

    OpenAPI spec version: 2.99.0
    Contact: tecnico@paycomet.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class V1formPaymentMerchantDataAcctInfo(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'ch_acc_age_ind': 'str',
        'ch_acc_change': 'str',
        'ch_acc_change_ind': 'str',
        'ch_acc_date': 'str',
        'ch_acc_pw_change': 'str',
        'ch_acc_pw_change_ind': 'str',
        'nb_purchase_account': 'int',
        'provision_attempts_day': 'int',
        'txn_activity_day': 'str',
        'txn_activity_year': 'str',
        'payment_acc_age': 'str',
        'payment_acc_ind': 'str',
        'ship_address_usage': 'str',
        'ship_address_usage_ind': 'str',
        'ship_name_indicator': 'str',
        'suspicious_acc_activity': 'str'
    }

    attribute_map = {
        'ch_acc_age_ind': 'chAccAgeInd',
        'ch_acc_change': 'chAccChange',
        'ch_acc_change_ind': 'chAccChangeInd',
        'ch_acc_date': 'chAccDate',
        'ch_acc_pw_change': 'chAccPwChange',
        'ch_acc_pw_change_ind': 'chAccPwChangeInd',
        'nb_purchase_account': 'nbPurchaseAccount',
        'provision_attempts_day': 'provisionAttemptsDay',
        'txn_activity_day': 'txnActivityDay',
        'txn_activity_year': 'txnActivityYear',
        'payment_acc_age': 'paymentAccAge',
        'payment_acc_ind': 'paymentAccInd',
        'ship_address_usage': 'shipAddressUsage',
        'ship_address_usage_ind': 'shipAddressUsageInd',
        'ship_name_indicator': 'shipNameIndicator',
        'suspicious_acc_activity': 'suspiciousAccActivity'
    }

    def __init__(self, ch_acc_age_ind=None, ch_acc_change=None, ch_acc_change_ind=None, ch_acc_date=None, ch_acc_pw_change=None, ch_acc_pw_change_ind=None, nb_purchase_account=None, provision_attempts_day=None, txn_activity_day=None, txn_activity_year=None, payment_acc_age=None, payment_acc_ind=None, ship_address_usage=None, ship_address_usage_ind=None, ship_name_indicator=None, suspicious_acc_activity=None):  # noqa: E501
        """V1formPaymentMerchantDataAcctInfo - a model defined in Swagger"""  # noqa: E501
        self._ch_acc_age_ind = None
        self._ch_acc_change = None
        self._ch_acc_change_ind = None
        self._ch_acc_date = None
        self._ch_acc_pw_change = None
        self._ch_acc_pw_change_ind = None
        self._nb_purchase_account = None
        self._provision_attempts_day = None
        self._txn_activity_day = None
        self._txn_activity_year = None
        self._payment_acc_age = None
        self._payment_acc_ind = None
        self._ship_address_usage = None
        self._ship_address_usage_ind = None
        self._ship_name_indicator = None
        self._suspicious_acc_activity = None
        self.discriminator = None
        if ch_acc_age_ind is not None:
            self.ch_acc_age_ind = ch_acc_age_ind
        if ch_acc_change is not None:
            self.ch_acc_change = ch_acc_change
        if ch_acc_change_ind is not None:
            self.ch_acc_change_ind = ch_acc_change_ind
        if ch_acc_date is not None:
            self.ch_acc_date = ch_acc_date
        if ch_acc_pw_change is not None:
            self.ch_acc_pw_change = ch_acc_pw_change
        if ch_acc_pw_change_ind is not None:
            self.ch_acc_pw_change_ind = ch_acc_pw_change_ind
        if nb_purchase_account is not None:
            self.nb_purchase_account = nb_purchase_account
        if provision_attempts_day is not None:
            self.provision_attempts_day = provision_attempts_day
        if txn_activity_day is not None:
            self.txn_activity_day = txn_activity_day
        if txn_activity_year is not None:
            self.txn_activity_year = txn_activity_year
        if payment_acc_age is not None:
            self.payment_acc_age = payment_acc_age
        if payment_acc_ind is not None:
            self.payment_acc_ind = payment_acc_ind
        if ship_address_usage is not None:
            self.ship_address_usage = ship_address_usage
        if ship_address_usage_ind is not None:
            self.ship_address_usage_ind = ship_address_usage_ind
        if ship_name_indicator is not None:
            self.ship_name_indicator = ship_name_indicator
        if suspicious_acc_activity is not None:
            self.suspicious_acc_activity = suspicious_acc_activity

    @property
    def ch_acc_age_ind(self):
        """Gets the ch_acc_age_ind of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501

        Period of time that the customer has had the account at the business. Possible values: 01 = No account (checkout as guest), 02 = Created in this transaction, 03 = Under 30 days, 04 = Between 30 and 60 days, 05 = Over 60 days  # noqa: E501

        :return: The ch_acc_age_ind of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :rtype: str
        """
        return self._ch_acc_age_ind

    @ch_acc_age_ind.setter
    def ch_acc_age_ind(self, ch_acc_age_ind):
        """Sets the ch_acc_age_ind of this V1formPaymentMerchantDataAcctInfo.

        Period of time that the customer has had the account at the business. Possible values: 01 = No account (checkout as guest), 02 = Created in this transaction, 03 = Under 30 days, 04 = Between 30 and 60 days, 05 = Over 60 days  # noqa: E501

        :param ch_acc_age_ind: The ch_acc_age_ind of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :type: str
        """

        self._ch_acc_age_ind = ch_acc_age_ind

    @property
    def ch_acc_change(self):
        """Gets the ch_acc_change of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501

        Date on which the user account with the business was last modified, including the invoice or delivery address, the new payment account or new added users. Date format: YYYYMMDD  # noqa: E501

        :return: The ch_acc_change of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :rtype: str
        """
        return self._ch_acc_change

    @ch_acc_change.setter
    def ch_acc_change(self, ch_acc_change):
        """Sets the ch_acc_change of this V1formPaymentMerchantDataAcctInfo.

        Date on which the user account with the business was last modified, including the invoice or delivery address, the new payment account or new added users. Date format: YYYYMMDD  # noqa: E501

        :param ch_acc_change: The ch_acc_change of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :type: str
        """

        self._ch_acc_change = ch_acc_change

    @property
    def ch_acc_change_ind(self):
        """Gets the ch_acc_change_ind of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501

        Period of time passed since the payment user’s account with the business was last modified, including the invoice or delivery address, the new payment account or new added users. Accepted values: 01 = Modified in this transaction, 02 = Under 30 days, 03 = 30-60 days, 04 = Over 60 days  # noqa: E501

        :return: The ch_acc_change_ind of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :rtype: str
        """
        return self._ch_acc_change_ind

    @ch_acc_change_ind.setter
    def ch_acc_change_ind(self, ch_acc_change_ind):
        """Sets the ch_acc_change_ind of this V1formPaymentMerchantDataAcctInfo.

        Period of time passed since the payment user’s account with the business was last modified, including the invoice or delivery address, the new payment account or new added users. Accepted values: 01 = Modified in this transaction, 02 = Under 30 days, 03 = 30-60 days, 04 = Over 60 days  # noqa: E501

        :param ch_acc_change_ind: The ch_acc_change_ind of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :type: str
        """

        self._ch_acc_change_ind = ch_acc_change_ind

    @property
    def ch_acc_date(self):
        """Gets the ch_acc_date of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501

        Date on which the payment user opened the account with the business. Date format: YYYYMMDD  # noqa: E501

        :return: The ch_acc_date of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :rtype: str
        """
        return self._ch_acc_date

    @ch_acc_date.setter
    def ch_acc_date(self, ch_acc_date):
        """Sets the ch_acc_date of this V1formPaymentMerchantDataAcctInfo.

        Date on which the payment user opened the account with the business. Date format: YYYYMMDD  # noqa: E501

        :param ch_acc_date: The ch_acc_date of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :type: str
        """

        self._ch_acc_date = ch_acc_date

    @property
    def ch_acc_pw_change(self):
        """Gets the ch_acc_pw_change of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501

        Date on which the payment user changed the password of their account with the business, or reset their account. Date format: YYYYMMDD  # noqa: E501

        :return: The ch_acc_pw_change of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :rtype: str
        """
        return self._ch_acc_pw_change

    @ch_acc_pw_change.setter
    def ch_acc_pw_change(self, ch_acc_pw_change):
        """Sets the ch_acc_pw_change of this V1formPaymentMerchantDataAcctInfo.

        Date on which the payment user changed the password of their account with the business, or reset their account. Date format: YYYYMMDD  # noqa: E501

        :param ch_acc_pw_change: The ch_acc_pw_change of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :type: str
        """

        self._ch_acc_pw_change = ch_acc_pw_change

    @property
    def ch_acc_pw_change_ind(self):
        """Gets the ch_acc_pw_change_ind of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501

        Indicates the period of time since the payment user’s account with the business changed its password or was reset. Accepted values: 01 = No changes, 02 = Changed during this transaction, 03 = Under 30 days, 04 = Between 30 and 60 days, 05 = Over 60 days  # noqa: E501

        :return: The ch_acc_pw_change_ind of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :rtype: str
        """
        return self._ch_acc_pw_change_ind

    @ch_acc_pw_change_ind.setter
    def ch_acc_pw_change_ind(self, ch_acc_pw_change_ind):
        """Sets the ch_acc_pw_change_ind of this V1formPaymentMerchantDataAcctInfo.

        Indicates the period of time since the payment user’s account with the business changed its password or was reset. Accepted values: 01 = No changes, 02 = Changed during this transaction, 03 = Under 30 days, 04 = Between 30 and 60 days, 05 = Over 60 days  # noqa: E501

        :param ch_acc_pw_change_ind: The ch_acc_pw_change_ind of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :type: str
        """

        self._ch_acc_pw_change_ind = ch_acc_pw_change_ind

    @property
    def nb_purchase_account(self):
        """Gets the nb_purchase_account of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501

        Number of purchases with this account during the last six months  # noqa: E501

        :return: The nb_purchase_account of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :rtype: int
        """
        return self._nb_purchase_account

    @nb_purchase_account.setter
    def nb_purchase_account(self, nb_purchase_account):
        """Sets the nb_purchase_account of this V1formPaymentMerchantDataAcctInfo.

        Number of purchases with this account during the last six months  # noqa: E501

        :param nb_purchase_account: The nb_purchase_account of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :type: int
        """

        self._nb_purchase_account = nb_purchase_account

    @property
    def provision_attempts_day(self):
        """Gets the provision_attempts_day of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501

        Number of attempts to add a card in the last 24 hours  # noqa: E501

        :return: The provision_attempts_day of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :rtype: int
        """
        return self._provision_attempts_day

    @provision_attempts_day.setter
    def provision_attempts_day(self, provision_attempts_day):
        """Sets the provision_attempts_day of this V1formPaymentMerchantDataAcctInfo.

        Number of attempts to add a card in the last 24 hours  # noqa: E501

        :param provision_attempts_day: The provision_attempts_day of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :type: int
        """

        self._provision_attempts_day = provision_attempts_day

    @property
    def txn_activity_day(self):
        """Gets the txn_activity_day of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501

        Number of transactions (successful and abandoned) for this account with the business in all payment accounts in the last 24 hours  # noqa: E501

        :return: The txn_activity_day of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :rtype: str
        """
        return self._txn_activity_day

    @txn_activity_day.setter
    def txn_activity_day(self, txn_activity_day):
        """Sets the txn_activity_day of this V1formPaymentMerchantDataAcctInfo.

        Number of transactions (successful and abandoned) for this account with the business in all payment accounts in the last 24 hours  # noqa: E501

        :param txn_activity_day: The txn_activity_day of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :type: str
        """

        self._txn_activity_day = txn_activity_day

    @property
    def txn_activity_year(self):
        """Gets the txn_activity_year of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501

        Number of transactions (successful and abandoned) for this account of the payment user with the business in all payment accounts of the last year  # noqa: E501

        :return: The txn_activity_year of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :rtype: str
        """
        return self._txn_activity_year

    @txn_activity_year.setter
    def txn_activity_year(self, txn_activity_year):
        """Sets the txn_activity_year of this V1formPaymentMerchantDataAcctInfo.

        Number of transactions (successful and abandoned) for this account of the payment user with the business in all payment accounts of the last year  # noqa: E501

        :param txn_activity_year: The txn_activity_year of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :type: str
        """

        self._txn_activity_year = txn_activity_year

    @property
    def payment_acc_age(self):
        """Gets the payment_acc_age of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501

        Date on which the payment account was registered on the payment user’s account with the business.  # noqa: E501

        :return: The payment_acc_age of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :rtype: str
        """
        return self._payment_acc_age

    @payment_acc_age.setter
    def payment_acc_age(self, payment_acc_age):
        """Sets the payment_acc_age of this V1formPaymentMerchantDataAcctInfo.

        Date on which the payment account was registered on the payment user’s account with the business.  # noqa: E501

        :param payment_acc_age: The payment_acc_age of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :type: str
        """

        self._payment_acc_age = payment_acc_age

    @property
    def payment_acc_ind(self):
        """Gets the payment_acc_ind of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501

        Indicates the period of time which the payment account was registered on the payment user’s account with the business. Accepted values: 01 = No account (checkout as guest), 02 = During this transaction, 03 = Under 30 days, 04 = Between 30 and 60 days, 05 = Over 60 days  # noqa: E501

        :return: The payment_acc_ind of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :rtype: str
        """
        return self._payment_acc_ind

    @payment_acc_ind.setter
    def payment_acc_ind(self, payment_acc_ind):
        """Sets the payment_acc_ind of this V1formPaymentMerchantDataAcctInfo.

        Indicates the period of time which the payment account was registered on the payment user’s account with the business. Accepted values: 01 = No account (checkout as guest), 02 = During this transaction, 03 = Under 30 days, 04 = Between 30 and 60 days, 05 = Over 60 days  # noqa: E501

        :param payment_acc_ind: The payment_acc_ind of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :type: str
        """

        self._payment_acc_ind = payment_acc_ind

    @property
    def ship_address_usage(self):
        """Gets the ship_address_usage of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501

        Date on which the delivery address used for this transaction was used for the first time with the business. Date format: YYYYMMDD  # noqa: E501

        :return: The ship_address_usage of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :rtype: str
        """
        return self._ship_address_usage

    @ship_address_usage.setter
    def ship_address_usage(self, ship_address_usage):
        """Sets the ship_address_usage of this V1formPaymentMerchantDataAcctInfo.

        Date on which the delivery address used for this transaction was used for the first time with the business. Date format: YYYYMMDD  # noqa: E501

        :param ship_address_usage: The ship_address_usage of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :type: str
        """

        self._ship_address_usage = ship_address_usage

    @property
    def ship_address_usage_ind(self):
        """Gets the ship_address_usage_ind of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501

        Indicates when the delivery address used for this transaction was used for the first time with the business. Accepted values: 01 = This transaction, 02 = Under 30 days, 03 = Between 30 and 60 days, 04 = Over 60 days  # noqa: E501

        :return: The ship_address_usage_ind of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :rtype: str
        """
        return self._ship_address_usage_ind

    @ship_address_usage_ind.setter
    def ship_address_usage_ind(self, ship_address_usage_ind):
        """Sets the ship_address_usage_ind of this V1formPaymentMerchantDataAcctInfo.

        Indicates when the delivery address used for this transaction was used for the first time with the business. Accepted values: 01 = This transaction, 02 = Under 30 days, 03 = Between 30 and 60 days, 04 = Over 60 days  # noqa: E501

        :param ship_address_usage_ind: The ship_address_usage_ind of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :type: str
        """

        self._ship_address_usage_ind = ship_address_usage_ind

    @property
    def ship_name_indicator(self):
        """Gets the ship_name_indicator of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501

        Indicates whether the name of the payment user on the account is identical to the delivery name used for this transaction. Accepted values: 01 = Name on the account identical to the delivery name, 02 = Name on the account different from the delivery name  # noqa: E501

        :return: The ship_name_indicator of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :rtype: str
        """
        return self._ship_name_indicator

    @ship_name_indicator.setter
    def ship_name_indicator(self, ship_name_indicator):
        """Sets the ship_name_indicator of this V1formPaymentMerchantDataAcctInfo.

        Indicates whether the name of the payment user on the account is identical to the delivery name used for this transaction. Accepted values: 01 = Name on the account identical to the delivery name, 02 = Name on the account different from the delivery name  # noqa: E501

        :param ship_name_indicator: The ship_name_indicator of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :type: str
        """

        self._ship_name_indicator = ship_name_indicator

    @property
    def suspicious_acc_activity(self):
        """Gets the suspicious_acc_activity of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501

        Indicates whether the business has experienced suspicious activity (including previous fraud) on the payment user’s account. Accepted values: 01 = No record of suspicious activity, 02 = Record of suspicious activity  # noqa: E501

        :return: The suspicious_acc_activity of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :rtype: str
        """
        return self._suspicious_acc_activity

    @suspicious_acc_activity.setter
    def suspicious_acc_activity(self, suspicious_acc_activity):
        """Sets the suspicious_acc_activity of this V1formPaymentMerchantDataAcctInfo.

        Indicates whether the business has experienced suspicious activity (including previous fraud) on the payment user’s account. Accepted values: 01 = No record of suspicious activity, 02 = Record of suspicious activity  # noqa: E501

        :param suspicious_acc_activity: The suspicious_acc_activity of this V1formPaymentMerchantDataAcctInfo.  # noqa: E501
        :type: str
        """

        self._suspicious_acc_activity = suspicious_acc_activity

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(V1formPaymentMerchantDataAcctInfo, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, V1formPaymentMerchantDataAcctInfo):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
