# coding: utf-8

"""
    PAYCOMET REST API

    PAYCOMET API REST for customers.  # noqa: E501

    OpenAPI spec version: 2.99.0
    Contact: tecnico@paycomet.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class IvrSessioncancelBody(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'terminal': 'int',
        'ivr_provider_id': 'int',
        'ivr_merchant_order': 'str'
    }

    attribute_map = {
        'terminal': 'terminal',
        'ivr_provider_id': 'ivrProviderId',
        'ivr_merchant_order': 'ivrMerchantOrder'
    }

    def __init__(self, terminal=None, ivr_provider_id=None, ivr_merchant_order=None):  # noqa: E501
        """IvrSessioncancelBody - a model defined in Swagger"""  # noqa: E501
        self._terminal = None
        self._ivr_provider_id = None
        self._ivr_merchant_order = None
        self.discriminator = None
        self.terminal = terminal
        self.ivr_provider_id = ivr_provider_id
        self.ivr_merchant_order = ivr_merchant_order

    @property
    def terminal(self):
        """Gets the terminal of this IvrSessioncancelBody.  # noqa: E501

        Product or terminal Id.  # noqa: E501

        :return: The terminal of this IvrSessioncancelBody.  # noqa: E501
        :rtype: int
        """
        return self._terminal

    @terminal.setter
    def terminal(self, terminal):
        """Sets the terminal of this IvrSessioncancelBody.

        Product or terminal Id.  # noqa: E501

        :param terminal: The terminal of this IvrSessioncancelBody.  # noqa: E501
        :type: int
        """
        if terminal is None:
            raise ValueError("Invalid value for `terminal`, must not be `None`")  # noqa: E501

        self._terminal = terminal

    @property
    def ivr_provider_id(self):
        """Gets the ivr_provider_id of this IvrSessioncancelBody.  # noqa: E501

        Supplier / IVR integrator code.  # noqa: E501

        :return: The ivr_provider_id of this IvrSessioncancelBody.  # noqa: E501
        :rtype: int
        """
        return self._ivr_provider_id

    @ivr_provider_id.setter
    def ivr_provider_id(self, ivr_provider_id):
        """Sets the ivr_provider_id of this IvrSessioncancelBody.

        Supplier / IVR integrator code.  # noqa: E501

        :param ivr_provider_id: The ivr_provider_id of this IvrSessioncancelBody.  # noqa: E501
        :type: int
        """
        if ivr_provider_id is None:
            raise ValueError("Invalid value for `ivr_provider_id`, must not be `None`")  # noqa: E501

        self._ivr_provider_id = ivr_provider_id

    @property
    def ivr_merchant_order(self):
        """Gets the ivr_merchant_order of this IvrSessioncancelBody.  # noqa: E501

        Operation reference. It must be unique in each valid transaction. IMPORTANT IN CASE OF SUBSCRIPTIONS Do not include the characters “[“ or “]”, they will be used to recognise the business idUser.  # noqa: E501

        :return: The ivr_merchant_order of this IvrSessioncancelBody.  # noqa: E501
        :rtype: str
        """
        return self._ivr_merchant_order

    @ivr_merchant_order.setter
    def ivr_merchant_order(self, ivr_merchant_order):
        """Sets the ivr_merchant_order of this IvrSessioncancelBody.

        Operation reference. It must be unique in each valid transaction. IMPORTANT IN CASE OF SUBSCRIPTIONS Do not include the characters “[“ or “]”, they will be used to recognise the business idUser.  # noqa: E501

        :param ivr_merchant_order: The ivr_merchant_order of this IvrSessioncancelBody.  # noqa: E501
        :type: str
        """
        if ivr_merchant_order is None:
            raise ValueError("Invalid value for `ivr_merchant_order`, must not be `None`")  # noqa: E501

        self._ivr_merchant_order = ivr_merchant_order

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(IvrSessioncancelBody, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IvrSessioncancelBody):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
