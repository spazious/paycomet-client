# coding: utf-8

"""
    PAYCOMET REST API

    PAYCOMET API REST for customers.  # noqa: E501

    OpenAPI spec version: 2.99.0
    Contact: tecnico@paycomet.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InlineResponse2009Invoices(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'account_id': 'int',
        'shop_id': 'int',
        'invoice_id': 'int',
        'invoice_unique_id': 'str',
        'invoice_type': 'str',
        'date_created': 'str',
        'end_time': 'str',
        'amount': 'float',
        'currency': 'str',
        'description': 'str',
        'iban': 'str',
        'bic': 'str',
        'owner': 'str',
        'state': 'int',
        'last_execution_time': 'str',
        'error_id': 'int'
    }

    attribute_map = {
        'id': 'id',
        'account_id': 'accountId',
        'shop_id': 'shopId',
        'invoice_id': 'invoiceId',
        'invoice_unique_id': 'invoiceUniqueId',
        'invoice_type': 'invoiceType',
        'date_created': 'dateCreated',
        'end_time': 'endTime',
        'amount': 'amount',
        'currency': 'currency',
        'description': 'description',
        'iban': 'iban',
        'bic': 'bic',
        'owner': 'owner',
        'state': 'state',
        'last_execution_time': 'lastExecutionTime',
        'error_id': 'errorId'
    }

    def __init__(self, id=None, account_id=None, shop_id=None, invoice_id=None, invoice_unique_id=None, invoice_type=None, date_created=None, end_time=None, amount=None, currency=None, description=None, iban=None, bic=None, owner=None, state=None, last_execution_time=None, error_id=None):  # noqa: E501
        """InlineResponse2009Invoices - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._account_id = None
        self._shop_id = None
        self._invoice_id = None
        self._invoice_unique_id = None
        self._invoice_type = None
        self._date_created = None
        self._end_time = None
        self._amount = None
        self._currency = None
        self._description = None
        self._iban = None
        self._bic = None
        self._owner = None
        self._state = None
        self._last_execution_time = None
        self._error_id = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if account_id is not None:
            self.account_id = account_id
        if shop_id is not None:
            self.shop_id = shop_id
        if invoice_id is not None:
            self.invoice_id = invoice_id
        if invoice_unique_id is not None:
            self.invoice_unique_id = invoice_unique_id
        if invoice_type is not None:
            self.invoice_type = invoice_type
        if date_created is not None:
            self.date_created = date_created
        if end_time is not None:
            self.end_time = end_time
        if amount is not None:
            self.amount = amount
        if currency is not None:
            self.currency = currency
        if description is not None:
            self.description = description
        if iban is not None:
            self.iban = iban
        if bic is not None:
            self.bic = bic
        if owner is not None:
            self.owner = owner
        if state is not None:
            self.state = state
        if last_execution_time is not None:
            self.last_execution_time = last_execution_time
        if error_id is not None:
            self.error_id = error_id

    @property
    def id(self):
        """Gets the id of this InlineResponse2009Invoices.  # noqa: E501


        :return: The id of this InlineResponse2009Invoices.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InlineResponse2009Invoices.


        :param id: The id of this InlineResponse2009Invoices.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def account_id(self):
        """Gets the account_id of this InlineResponse2009Invoices.  # noqa: E501


        :return: The account_id of this InlineResponse2009Invoices.  # noqa: E501
        :rtype: int
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this InlineResponse2009Invoices.


        :param account_id: The account_id of this InlineResponse2009Invoices.  # noqa: E501
        :type: int
        """

        self._account_id = account_id

    @property
    def shop_id(self):
        """Gets the shop_id of this InlineResponse2009Invoices.  # noqa: E501


        :return: The shop_id of this InlineResponse2009Invoices.  # noqa: E501
        :rtype: int
        """
        return self._shop_id

    @shop_id.setter
    def shop_id(self, shop_id):
        """Sets the shop_id of this InlineResponse2009Invoices.


        :param shop_id: The shop_id of this InlineResponse2009Invoices.  # noqa: E501
        :type: int
        """

        self._shop_id = shop_id

    @property
    def invoice_id(self):
        """Gets the invoice_id of this InlineResponse2009Invoices.  # noqa: E501


        :return: The invoice_id of this InlineResponse2009Invoices.  # noqa: E501
        :rtype: int
        """
        return self._invoice_id

    @invoice_id.setter
    def invoice_id(self, invoice_id):
        """Sets the invoice_id of this InlineResponse2009Invoices.


        :param invoice_id: The invoice_id of this InlineResponse2009Invoices.  # noqa: E501
        :type: int
        """

        self._invoice_id = invoice_id

    @property
    def invoice_unique_id(self):
        """Gets the invoice_unique_id of this InlineResponse2009Invoices.  # noqa: E501


        :return: The invoice_unique_id of this InlineResponse2009Invoices.  # noqa: E501
        :rtype: str
        """
        return self._invoice_unique_id

    @invoice_unique_id.setter
    def invoice_unique_id(self, invoice_unique_id):
        """Sets the invoice_unique_id of this InlineResponse2009Invoices.


        :param invoice_unique_id: The invoice_unique_id of this InlineResponse2009Invoices.  # noqa: E501
        :type: str
        """

        self._invoice_unique_id = invoice_unique_id

    @property
    def invoice_type(self):
        """Gets the invoice_type of this InlineResponse2009Invoices.  # noqa: E501


        :return: The invoice_type of this InlineResponse2009Invoices.  # noqa: E501
        :rtype: str
        """
        return self._invoice_type

    @invoice_type.setter
    def invoice_type(self, invoice_type):
        """Sets the invoice_type of this InlineResponse2009Invoices.


        :param invoice_type: The invoice_type of this InlineResponse2009Invoices.  # noqa: E501
        :type: str
        """

        self._invoice_type = invoice_type

    @property
    def date_created(self):
        """Gets the date_created of this InlineResponse2009Invoices.  # noqa: E501


        :return: The date_created of this InlineResponse2009Invoices.  # noqa: E501
        :rtype: str
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this InlineResponse2009Invoices.


        :param date_created: The date_created of this InlineResponse2009Invoices.  # noqa: E501
        :type: str
        """

        self._date_created = date_created

    @property
    def end_time(self):
        """Gets the end_time of this InlineResponse2009Invoices.  # noqa: E501


        :return: The end_time of this InlineResponse2009Invoices.  # noqa: E501
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this InlineResponse2009Invoices.


        :param end_time: The end_time of this InlineResponse2009Invoices.  # noqa: E501
        :type: str
        """

        self._end_time = end_time

    @property
    def amount(self):
        """Gets the amount of this InlineResponse2009Invoices.  # noqa: E501


        :return: The amount of this InlineResponse2009Invoices.  # noqa: E501
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this InlineResponse2009Invoices.


        :param amount: The amount of this InlineResponse2009Invoices.  # noqa: E501
        :type: float
        """

        self._amount = amount

    @property
    def currency(self):
        """Gets the currency of this InlineResponse2009Invoices.  # noqa: E501


        :return: The currency of this InlineResponse2009Invoices.  # noqa: E501
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this InlineResponse2009Invoices.


        :param currency: The currency of this InlineResponse2009Invoices.  # noqa: E501
        :type: str
        """

        self._currency = currency

    @property
    def description(self):
        """Gets the description of this InlineResponse2009Invoices.  # noqa: E501


        :return: The description of this InlineResponse2009Invoices.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this InlineResponse2009Invoices.


        :param description: The description of this InlineResponse2009Invoices.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def iban(self):
        """Gets the iban of this InlineResponse2009Invoices.  # noqa: E501


        :return: The iban of this InlineResponse2009Invoices.  # noqa: E501
        :rtype: str
        """
        return self._iban

    @iban.setter
    def iban(self, iban):
        """Sets the iban of this InlineResponse2009Invoices.


        :param iban: The iban of this InlineResponse2009Invoices.  # noqa: E501
        :type: str
        """

        self._iban = iban

    @property
    def bic(self):
        """Gets the bic of this InlineResponse2009Invoices.  # noqa: E501


        :return: The bic of this InlineResponse2009Invoices.  # noqa: E501
        :rtype: str
        """
        return self._bic

    @bic.setter
    def bic(self, bic):
        """Sets the bic of this InlineResponse2009Invoices.


        :param bic: The bic of this InlineResponse2009Invoices.  # noqa: E501
        :type: str
        """

        self._bic = bic

    @property
    def owner(self):
        """Gets the owner of this InlineResponse2009Invoices.  # noqa: E501


        :return: The owner of this InlineResponse2009Invoices.  # noqa: E501
        :rtype: str
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this InlineResponse2009Invoices.


        :param owner: The owner of this InlineResponse2009Invoices.  # noqa: E501
        :type: str
        """

        self._owner = owner

    @property
    def state(self):
        """Gets the state of this InlineResponse2009Invoices.  # noqa: E501


        :return: The state of this InlineResponse2009Invoices.  # noqa: E501
        :rtype: int
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this InlineResponse2009Invoices.


        :param state: The state of this InlineResponse2009Invoices.  # noqa: E501
        :type: int
        """

        self._state = state

    @property
    def last_execution_time(self):
        """Gets the last_execution_time of this InlineResponse2009Invoices.  # noqa: E501


        :return: The last_execution_time of this InlineResponse2009Invoices.  # noqa: E501
        :rtype: str
        """
        return self._last_execution_time

    @last_execution_time.setter
    def last_execution_time(self, last_execution_time):
        """Sets the last_execution_time of this InlineResponse2009Invoices.


        :param last_execution_time: The last_execution_time of this InlineResponse2009Invoices.  # noqa: E501
        :type: str
        """

        self._last_execution_time = last_execution_time

    @property
    def error_id(self):
        """Gets the error_id of this InlineResponse2009Invoices.  # noqa: E501


        :return: The error_id of this InlineResponse2009Invoices.  # noqa: E501
        :rtype: int
        """
        return self._error_id

    @error_id.setter
    def error_id(self, error_id):
        """Sets the error_id of this InlineResponse2009Invoices.


        :param error_id: The error_id of this InlineResponse2009Invoices.  # noqa: E501
        :type: int
        """

        self._error_id = error_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse2009Invoices, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse2009Invoices):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
